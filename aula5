fun main() {
  
// Na prática Operadores Lógicos
// 
// Minha mãe pediu para eu ir na loja de talheres e ela falou:
// traga uma concha de feijão, se tiver garfo, faca e colher
/* 
var garfo = false
var faca = true
var colher = true
    
//println(garfo && faca)
println(garfo && (faca || colher))
*/
/*
 // Show do Péricles
 // pro cidadão menor de 18 entrar, ele precisa ter pelo menos 12 anos E
 // estar acompanhado dos pais
 // 
 var idade = 15
 var comPais = false
 var comIdentidade = true
    
 if(idade < 18){
 if(idade >= 12 && comIdentidade == true || comPais == true){
         println("Aproveite o show.. jovem !!")    }else{
     println("Tu não pode entrar!")  
     }
    }else{
     println(" Aproveite o show!!")
*/
/*
var coracoes = 1
    var vidas = 3
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
 * You can edit, run, and share this code.
 * play.kotlinlang.org
 */
fun main() {
    println("Hello, world!!!")

// Exercícios -> Faça uma tabuada até o décimo multiplo de um número escolhido,
// utilizando o laço for 
// em excessão as tabuadas do 0, 1 e 2
// 
// Correção
// 
/*
for(calc in 0..10 ){
    println(calc * 7)

}
*/

// Collections
// 
// intervalos, listas, arrays, vetores etc 

//tipos de listas
//
var list1 = listOf("tartaruga", 0, 0.1, true)

println(list1) // exibir a lista
println(list1.size) // retorna o tamanho da lista
println(list1.lastIndex) //retornar o último index
println(list1[2]) //exibir o valor de um um determinado index
println(list1.contains("tartaruga")) //compara se existe um determinado valor dentro da lista
println(list1.indexOf(0)) // indica o index de um determinado valor
println(list1.lastIndexOf(0.1)) // indica o último de um determinado valor
println(list1.first()) //o valor primeiro index
println(list1.last()) //o valor do último index
println(list1.isEmpty()) //compara se a lista está vazia

//<tags>
var list1 = listOf<String>("leBron James", "Stephen Curry", "Michael Jordan", "Perna longa", "Klay Trompson")
// Lista acima especifica o












}
    if(coracoes ==  0 && vidas <= 0){
        println("Game Over!")
    }else{
        println("O Jogo Continua")
*/

// When - Quando
// 
// Comparaçãode quando um valor for igual a um determinado valor,
// uma determinada ação será executada
// 
// Estrutura do When
// 
// var auxiliar = valor
// 
// when(auxiliar){
// 
// valor -> {ação}
// valor -> {ação}
// valor -> {ação}
// valor -> {ação}
// valor -> {ação}
// else -> {ação}
// }
// será usado geralmente quando durante o programa o valor da váriável
// não for estático, ou seja, ele estiver mudando
// 
var mes = 5

when(mes){
    1 -> {println("Lisboa")
    mes++ 
    }
    2 -> {println("Nova York")}
    3 -> {println("Rio de Janeiro")}
    4 -> {println("São Paulo")}
    5 -> {println("Keylandia")}
    6 -> {println("Millwaulke")}
    7 -> {println("barcelona")}
    8 -> {println("Springfield")}
    9 -> {println("Los Pollos Hermanos")}
    10 -> {println("Elmore")}
    11 -> {println("Toronto")}
    12 -> {println("Seoul")}
    else -> {println("Acordou")}
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



var diaSemana = "Sábado"

when(diaSemana){
    "Segunda-feira", "Terça-feira", "Quarta-feira", "Quinta-feira", 
    "Sexta-feira" -> {println("Dia útil, seja produtivo!")}
    "Sábado", "Domingo" ->  {println("Final de semana")}
    else -> {println("Dia inexistente, dia inútil")}
}   
 }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
fun main() {
/*
// Laços de repetição - loops
// 
// repeat - repita
// while - enquanto
// do..while - faça..enquanto
// for - para
// 
// repeat - repita
// vai repetir uma determinada ação uma determinada quantidade de vezes
// 
// Estrutura do repeat
// 
// repeat(númeroVezes)
// ação
// }
// 
repeat(8){
    println("Isso é um teste, testando, testando")
}

    
var motos = 0  

repeat(9){
   println(motos ++)

}

    
    
// Laço whilw - enquanto
// 
// enquanto uma condição for verdadeira, uma determinada ação estará sendo excutada
// Estrutura do while
// 
// while(condição){
// ação
// }
*/
    
var bateria = 100
while(bateria > -1){
    println(bateria--)
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}

fun main() {
    // obs. listof() -> imutável 
    // Proxima aula... mutablelistOf()
    // mutableListOf() --> armazena qualquer tipo de valores conjuntos
    // mutableListOf<tipoDeValor -> armazena valores especificos de seu tipo
    // 
    var comida = mutableListOf<String>("Strogonoff","patê  de frango","lasagna","Feijoada") 
    
    println(comida)
     
    // Propriedade
    // 
    comida.add("Macarrão") // adiciona um valor a lista
    println(comida)
    comida.add(0, "cuscuz") // adiciona um valor a um index em especifico na lista
    println(comida)
    comida.remove("Pate de frango") //remove um valor em especifico da lista
    println(comida)
    comida.removeAT(0) //remove um valor d eum index especifico
    println(comida)
    comida.set(2,"Pastel de Carne seca") // substitui um valor pelo seu index
    println(comida)
    comida.clear() //remove todos os valores da lista
    println(comida)
    
    //Exercicio -> A cada mes do ano,em uma turma de 5 alunos,entra um aluno novo
    // .crie a lista inicial de alunos da turma
    // .a cada mes adicione u  novo aluno (em linhas diferentes)
    // .e 2 meses do ano,2 alunos foram transferidos
    // da turma (dica: em meses diferentes)
    // .e em 2 meses do ano,2 alunos foram substituido por
    // outros dois alunos(dica: em meses diferentes)
    // 
    // Exiba a lista de alunos respectiva de cada mes do ano
    // dica(interpretação de texto) 
 
    
