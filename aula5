fun main() {
  
// Na pr√°tica Operadores L√≥gicos
// 
// Minha m√£e pediu para eu ir na loja de talheres e ela falou:
// traga uma concha de feij√£o, se tiver garfo, faca e colher
/* 
var garfo = false
var faca = true
var colher = true
    
//println(garfo && faca)
println(garfo && (faca || colher))
*/
/*
 // Show do P√©ricles
 // pro cidad√£o menor de 18 entrar, ele precisa ter pelo menos 12 anos E
 // estar acompanhado dos pais
 // 
 var idade = 15
 var comPais = false
 var comIdentidade = true
    
 if(idade < 18){
 if(idade >= 12 && comIdentidade == true || comPais == true){
         println("Aproveite o show.. jovem !!")    }else{
     println("Tu n√£o pode entrar!")  
     }
    }else{
     println(" Aproveite o show!!")
*/
/*
var coracoes = 1
    var vidas = 3
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
 * You can edit, run, and share this code.
 * play.kotlinlang.org
 */
fun main() {
    println("Hello, world!!!")

// Exerc√≠cios -> Fa√ßa uma tabuada at√© o d√©cimo multiplo de um n√∫mero escolhido,
// utilizando o la√ßo for 
// em excess√£o as tabuadas do 0, 1 e 2
// 
// Corre√ß√£o
// 
/*
for(calc in 0..10 ){
    println(calc * 7)

}
*/

// Collections
// 
// intervalos, listas, arrays, vetores etc 

//tipos de listas
//
var list1 = listOf("tartaruga", 0, 0.1, true)

println(list1) // exibir a lista
println(list1.size) // retorna o tamanho da lista
println(list1.lastIndex) //retornar o √∫ltimo index
println(list1[2]) //exibir o valor de um um determinado index
println(list1.contains("tartaruga")) //compara se existe um determinado valor dentro da lista
println(list1.indexOf(0)) // indica o index de um determinado valor
println(list1.lastIndexOf(0.1)) // indica o √∫ltimo de um determinado valor
println(list1.first()) //o valor primeiro index
println(list1.last()) //o valor do √∫ltimo index
println(list1.isEmpty()) //compara se a lista est√° vazia

//<tags>
var list1 = listOf<String>("leBron James", "Stephen Curry", "Michael Jordan", "Perna longa", "Klay Trompson")
// Lista acima especifica o












}
    if(coracoes ==  0 && vidas <= 0){
        println("Game Over!")
    }else{
        println("O Jogo Continua")
*/

// When - Quando
// 
// Compara√ß√£ode quando um valor for igual a um determinado valor,
// uma determinada a√ß√£o ser√° executada
// 
// Estrutura do When
// 
// var auxiliar = valor
// 
// when(auxiliar){
// 
// valor -> {a√ß√£o}
// valor -> {a√ß√£o}
// valor -> {a√ß√£o}
// valor -> {a√ß√£o}
// valor -> {a√ß√£o}
// else -> {a√ß√£o}
// }
// ser√° usado geralmente quando durante o programa o valor da v√°ri√°vel
// n√£o for est√°tico, ou seja, ele estiver mudando
// 
var mes = 5

when(mes){
    1 -> {println("Lisboa")
    mes++ 
    }
    2 -> {println("Nova York")}
    3 -> {println("Rio de Janeiro")}
    4 -> {println("S√£o Paulo")}
    5 -> {println("Keylandia")}
    6 -> {println("Millwaulke")}
    7 -> {println("barcelona")}
    8 -> {println("Springfield")}
    9 -> {println("Los Pollos Hermanos")}
    10 -> {println("Elmore")}
    11 -> {println("Toronto")}
    12 -> {println("Seoul")}
    else -> {println("Acordou")}
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



var diaSemana = "S√°bado"

when(diaSemana){
    "Segunda-feira", "Ter√ßa-feira", "Quarta-feira", "Quinta-feira", 
    "Sexta-feira" -> {println("Dia √∫til, seja produtivo!")}
    "S√°bado", "Domingo" ->  {println("Final de semana")}
    else -> {println("Dia inexistente, dia in√∫til")}
}   
 }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
fun main() {
/*
// La√ßos de repeti√ß√£o - loops
// 
// repeat - repita
// while - enquanto
// do..while - fa√ßa..enquanto
// for - para
// 
// repeat - repita
// vai repetir uma determinada a√ß√£o uma determinada quantidade de vezes
// 
// Estrutura do repeat
// 
// repeat(n√∫meroVezes)
// a√ß√£o
// }
// 
repeat(8){
    println("Isso √© um teste, testando, testando")
}

    
var motos = 0  

repeat(9){
   println(motos ++)

}

    .
    
// La√ßo whilw - enquanto
// 
// enquanto uma condi√ß√£o for verdadeira, uma determinada a√ß√£o estar√° sendo excutada
// Estrutura do while
// 
// while(condi√ß√£o){
// a√ß√£o
// }
*/
    
var bateria = 100
while(bateria > -1){
    println(bateria--)
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}

fun main() {
    // obs. listof() -> imut√°vel 
    // Proxima aula... mutablelistOf()
    // mutableListOf() --> armazena qualquer tipo de valores conjuntos
    // mutableListOf<tipoDeValor -> armazena valores especificos de seu tipo
    // 
    var comida = mutableListOf<String>("Strogonoff","pat√™  de frango","lasagna","Feijoada") 
    
    println(comida)
     
    // Propriedade
    // 
    comida.add("Macarr√£o") // adiciona um valor a lista
    println(comida)
    comida.add(0, "cuscuz") // adiciona um valor a um index em especifico na lista
    println(comida)
    comida.remove("Pate de frango") //remove um valor em especifico da lista
    println(comida)
    comida.removeAT(0) //remove um valor d eum index especifico
    println(comida)
    comida.set(2,"Pastel de Carne seca") // substitui um valor pelo seu index
    println(comida)
    comida.clear() //remove todos os valores da lista
    println(comida)
    
    //Exercicio -> A cada mes do ano,em uma turma de 5 alunos,entra um aluno novo
    // .crie a lista inicial de alunos da turma
    // .a cada mes adicione u  novo aluno (em linhas diferentes)
    // .e 2 meses do ano,2 alunos foram transferidos
    // da turma (dica: em meses diferentes)
    // .e em 2 meses do ano,2 alunos foram substituido por
    // outros dois alunos(dica: em meses diferentes)
    // 
    // Exiba a lista de alunos respectiva de cada mes do ano
    // dica(interpreta√ß√£o de texto) 
 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    fun main() {
    val kotlin = "üôÇ"
    println(kotlin)
fun main() {
    /*
    //Exercicio -> A cada mes do ano,em uma turma de 5 alunos,entra um aluno novo
    // .crie a lista inicial de alunos da turma
    // .a cada mes adicione u  novo aluno (em linhas diferentes)
    // .e 2 meses do ano,2 alunos foram transferidos
    // da turma (dica: em meses diferentes)
    // .e em 2 meses do ano,2 alunos foram substituido por
    // outros dois alunos(dica: em meses diferentes)
    // 
    // Exiba a lista de alunos respectiva de cada mes do ano
    // dica(interpreta√ß√£o de texto)
    
    var turma = mutableListOf<String>("Cau√£","Julia","Davi","Pedro","Nicolas")
    
    println("turma incial")
    println(turma)
    
    println("Janeiro")
    turma.add("Miguel")
    println(turma)
    
    println("Fevereiro ")
    turma.add("Victor")
    turma.remove("Pedro")
    println(turma)
    
    println("Mar√ßo")
    turma.add("Miguel")
    println(turma)
    
    println("Abril")
    turma.add("Miguel")
    println(turma)
    
    println("Maio")
    turma.add("Miguel")
    println(turma)
    
    println("Junho")
    turma.add("Miguel")
    println(turma)
    
    println("Julho")
    turma.add("Miguel")
    println(turma)
    
    println("Agosto")
    turma.add("Miguel")
    println(turma)
    
    println("Setembro")
    turma.add("Miguel")
    println(turma)
    
    println("Outubro")
    turma.add("Miguel")
    println(turma)
    
    println("Novembro")
    turma.add("Miguel")
    println(turma)
    
    println("Dezembro")
    turma.add("Miguel")
    println(turma)
    */
    
    //POO
    //
    //Programa√ß√£o Orientada a Objetos
    //
    //Objetivo: SImular atividades e situa√ß√µes do mundo real
    //
    //objeto - elementos que podem interagir com um sistema Ex: p√©
    //
    //Classe - denomina√ß√£o de um determinado objeto Ex: Membros do corpo
    //
    //atributos- caracteristas,propriedades,par√¢metros Ex: Tamanho
    //
    //M√©todos - Atividades,a√ß√µes,que obj pode realizar ex: Chutar
    //
    // Heran√ßa - atributos de um obj que s√£o HERDADOS de um classe
     
    
}
    
 
}///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

fun main() {
/*
    var pessoa1 = Pessoa() //instanciamos um obj
    println(pessoa1.peso) //Exibir um atributo de um obj
    println(pessoa1.nacionalidade)
    pessoa1.nome = "Hebert" //alterar um valor de um atributo de um obj
    println(pessoa1.nome + ", "+pessoa1.idade)
    println(pessoa1.altura)
    println(pessoa1.profiss√£o)
    println(pessoa1.cidadeNatal)
    println(pessoa1.estado) 
    println(pessoa1.idioma)
    println(pessoa1.personalidade)
    println(pessoa1.sonho)
    println(pessoa1.objetivo)
    println(pessoa1.curso)
    println(pessoa1.foco)
    // Exerc√≠cio -> Fa√ßa uma apresenta√ß√£o sua utilizandoa classe Pessoa() j√° criada e utilizando pelo
    // menos, todos as atributos que existem na classe

var pessoa2 = Pessoa()
pessoa2.nome = "Hebert"
pessoa2.idade = 18
pessoa2.nacionalidade = "brazilly"
pessoa2.idioma = "portugu√™s"
pessoa2.profiss√£o = "Hope"
println("Meu nome √© ${pessoa2.nome}, eu tenho ${pessoa2.idade}, eu sou ${pessoa2.nacionalidade}, eu falo ")
println("${pessoa2.idioma} e minha profiss√£o √© ${pessoa2.profiss√£o}")
}
*/
 
var pessoa3 = Pessoa()
var animal1 = animal("Cachorro", "Pinscher", 7, "chinelo", "grande")   
var animal2 = animal("")    
// Exerc√≠cio -> Fa√ßa o cat√°logo(fict√≠cio) de animais que est√£o morando no zool√≥gico de SP
// com nno min√≠mo 20 animais, sem repeti√ß√£o de ra√ßa    
    
 
    
class Animal(var especie: String, //atributos que todo animazin deve ter
             var raca: String, 
             var idade: Int, 
             var dieta: String, 
             var habitat: String){
    
}  
    
class Pessoa {
    //Atributos que todo pessoa pode ter
    var nome = "Hebert"
    var idade = 18 
    var altura = 1.69
    var peso = 67.78
    var profiss√£o = "Empres√°rio"
    var nacionalidade = "Brasileiro"
    var cidadeNatal = "S√£o Paulo"
    var estado = "S√£o Paulo"
    var idioma = "portugu√™s"
    var personalidade = "divertido"
    var sonho = "ser Empres√°rio"
    var objetivo = "compra sua moto zera"
    var curso = "tecnologia Da Informa√ß√£o"
    var foco = "trabalhar para dar uma casa para minha rainha"
 
  
    
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * You can edit, run, and share this code.
 * play.kotlinlang.org
 */
fun main() {
    println("Hello, world!!!")
var pessoa3()
var animal1 = Animal("Cachorro", "Pinscher", 7, "chinelo", "grande")   
var animal2 = Animal("Gato", "")    
var animal3 = Animal("cavalo") 
var animal4 = Animal("abelhas") 
var animal5 = Animal("chinchila") 
var animal6 = Animal("cacatuas") 
var animal7 = Animal("gado") 
var animal8 = Animal("ovelha") 
var animal9 = Animal("calopsita") 
var animal10 = Animal("camundongo") 
var animal11 = Animal("can√°rio-do-reino") 
var animal12 = Animal("porquinho-da-√≠ndia") 
var animal13 = Animal(" ratos") 
var animal14 = Animal("galinhas") 
var animal15 = Animal("porco") 
var animal16 = Animal("peixe", "boi", "23", "gram√≠neas", "rios da regi√£o do Atl√¢ntico") 
var animal17 = Animal("peru", "Holandesa Branca", "4", "quirela de milho", " florestas") 
var animal18 = Animal("periquito", "australiano", "7", "sementes", "campos") 
var animal19 = Animal(" pardal", "Petronia", "2", "insetos", "florestas") 
var animal20 = Animal(" hamsters", "russo an√£o", "5", "frutas", "natureza") 

println("${animal1.raca}, ${animal1.idade}, ${animal1.dieta}, ${animal1.habitat}")

class Animal(var especie: String, //atributos que todo animazin deve ter
             var raca: String, 
             var idade: Int, 
      ///////////////////////////////////////////////////////////////////
